
(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbTitle',function(){return{template:'<h1 ng-if="\'Level 1\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h1>\n<h2 ng-if="\'Level 2\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h2>\n<h3 ng-if="\'Level 3\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h3>\n<h4 ng-if="\'Level 4\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h4>\n<h5 ng-if="\'Level 5\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h5>\n<h6 ng-if="\'Level 6\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h6>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbDatePicker',function(){return{controllerAs:'ctrl',controller:function PbDatePickerCtrl($scope,$log,widgetNameFactory,$element,$locale,$bsDatepicker){'use strict';this.name=widgetNameFactory.getName('pbDatepicker');this.firstDayOfWeek=($locale&&$locale.DATETIME_FORMATS&&$locale.DATETIME_FORMATS.FIRSTDAYOFWEEK)||0;$bsDatepicker.defaults.keyboard=false;this.setDateToToday=function(){var today=new Date();if(today.getDay()!==today.getUTCDay()){if(today.getTimezoneOffset()>0){today.setTime(today.getTime()-1440*60*1000);}else if(today.getTimezoneOffset()<0){today.setTime(today.getTime()+1440*60*1000);}}
today.setUTCHours(0);today.setUTCMinutes(0);today.setUTCSeconds(0);today.setUTCMilliseconds(0);$scope.properties.value=today;};this.openDatePicker=function(){$element.find('input')[0].focus();};if(!$scope.properties.isBound('value')){$log.error('the pbDatepicker property named "value" need to be bound to a variable');}},template:'<div ng-class="{\n    \'form-horizontal\': properties.labelPosition === \'left\' && !properties.labelHidden,\n    \'row\': properties.labelPosition === \'top\' && !properties.labelHidden || properties.labelHidden\n    }">\n    <div class="form-group">\n        <label\n            ng-if="!properties.labelHidden"\n            ng-class="{ \'control-label--required\': properties.required }"\n            class="control-label col-xs-{{ !properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 12 }}">\n            {{ properties.label | uiTranslate }}\n        </label>\n\n        <div\n            class="col-xs-{{ 12 - (!properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 0) }}">\n            <p class="input-group">\n                <input class="form-control"\n                       name="{{ctrl.name}}"\n                       type="text"\n                       placeholder="{{properties.placeholder | uiTranslate}}"\n                       ng-model="properties.value"\n                       ng-readonly="properties.readOnly"\n                       ng-required="properties.required"\n                       bs-datepicker\n                       data-container="body"\n                       data-autoclose="1"\n                       data-timezone="UTC"\n                       date-format="{{properties.dateFormat | uiTranslate}}"\n                       data-trigger="focus"\n                       data-start-week="{{ctrl.firstDayOfWeek}}">\n\n                <span class="input-group-btn">\n                    <button ng-if="properties.showToday"\n                            type="button"\n                            class="btn btn-default today\n                                {{$form[ctrl.name].$dirty && ($form[ctrl.name].$error.date || $form[ctrl.name].$error.parse ||\n                                (properties.required && $form[ctrl.name].$error.required)) ? \'btn-invalid\':\'\'}}"\n                            ng-click="ctrl.setDateToToday()"\n                            ng-disabled="properties.readOnly" ui-translate>\n                        {{properties.todayLabel || \'Today\' | uiTranslate}}\n                    </button>\n                    <button type="button"\n                            class="btn btn-default calendar\n                               {{$form[ctrl.name].$dirty && ($form[ctrl.name].$error.date || $form[ctrl.name].$error.parse ||\n                               (properties.required && $form[ctrl.name].$error.required)) ? \'btn-invalid\':\'\'}}"\n                            ng-click="ctrl.openDatePicker()"\n                            ng-disabled="properties.readOnly">\n                        <i class="glyphicon glyphicon-calendar"></i>\n                    </button>\n                </span>\n            </p>\n            <div ng-messages="$form[ctrl.name].$dirty && $form[ctrl.name].$error "\n                 ng-messages-include="forms-generic-errors.html" role="alert">\n                <div ng-message="parse" ng-if="!environment || !environment.editor" class="text-danger">\n                    {{ \'This is not a valid date\' | uiTranslate }}\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbText',function(){return{template:'<p ng-if="properties.allowHTML" class="text-{{ properties.alignment }}" ng-bind-html="properties.text | uiTranslate"></p>\n<p ng-if="!properties.allowHTML" class="text-{{ properties.alignment }}" ng-bind="properties.text | uiTranslate"></p>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbInput',function(){return{controllerAs:'ctrl',controller:function PbInputCtrl($scope,$log,widgetNameFactory){'use strict';this.name=widgetNameFactory.getName('pbInput');if(!$scope.properties.isBound('value')){$log.error('the pbInput property named "value" need to be bound to a variable');}},template:'<div ng-class="{\n    \'form-horizontal\': properties.labelPosition === \'left\' && !properties.labelHidden,\n    \'row\': properties.labelPosition === \'top\' && !properties.labelHidden || properties.labelHidden\n    }">\n    <div class="form-group">\n        <label\n            ng-if="!properties.labelHidden"\n            ng-class="{ \'control-label--required\': properties.required }"\n            class="control-label col-xs-{{ !properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 12 }}" ng-bind-html="properties.label | uiTranslate">\n        </label>\n        <div class="col-xs-{{ 12 - (!properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 0) }}">\n            <input\n                type="{{properties.type}}"\n                class="form-control"\n                placeholder="{{ properties.placeholder | uiTranslate }}"\n                ng-model="properties.value"\n                ng-model-options="{ allowInvalid: true }"\n                name="{{ctrl.name}}"\n                ng-required="properties.required"\n                ng-minlength="properties.minLength"\n                ng-maxlength="properties.maxLength"\n                min="{{properties.min}}"\n                max="{{properties.max}}"\n                step="{{properties.step}}"\n                ng-readonly="properties.readOnly">\n            <div ng-messages="$form[ctrl.name].$dirty && $form[ctrl.name].$error " ng-messages-include="forms-generic-errors.html" role="alert"></div>\n        </div>\n    </div>\n</div>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbLink',function(){return{controllerAs:'ctrl',controller:function PbLinkCtrl($scope,$location,$window,httpParamSerializer){'use strict';this.getHref=function(){var appToken=getAppToken('app');if($scope.properties.type==='page'){return getPortalUrl()+'/apps/'+(appToken||'APP_TOKEN_PLACEHOLDER')+'/'+$scope.properties.pageToken+buildQueryString();}else if($scope.properties.type==='process'){return getPortalUrl()+'/portal/form/process/'+$scope.properties.processName+'/'+$scope.properties.processVersion+buildQueryString(appToken?{app:appToken}:null);}else if($scope.properties.type==='task'){return getPortalUrl()+'/portal/form/taskInstance/'+$scope.properties.taskId+buildQueryString(appToken?{app:appToken}:null);}else if($scope.properties.type==='overview'){return getPortalUrl()+'/portal/form/processInstance/'+$scope.properties.caseId+buildQueryString(appToken?{app:appToken}:null);}else{return $scope.properties.targetUrl;}};this.getTarget=function(){if($scope.properties.type==='page'){return'_top';}
return $scope.properties.target;};function buildQueryString(additionalParams){var params=angular.extend({},$scope.properties.urlParams||{},additionalParams||{});var queryString=httpParamSerializer.paramSerializer(params);return queryString?'?'+queryString:'';}
function getAppToken(paramName){if($scope.properties.appToken){return $scope.properties.appToken;}
var appTokenParam=getUrlParam(paramName);if(appTokenParam){return appTokenParam;}
var urlMatches=$window.top.location.href.match('\/apps\/([^/]*)\/');if(urlMatches){return urlMatches[1];}
return null;}
function getUrlParam(paramName){var paramValue=$location.absUrl().match('[\/?&]'+paramName+'=([^&#]*)($|[&#])');if(paramValue){return paramValue[1];}
return'';}
function getPortalUrl(){var locationHref=$location.absUrl();var indexOfPortal=locationHref.indexOf('/portal');if(indexOfPortal>=0){return locationHref.substring(0,indexOfPortal);}else{return'/bonita';}}},template:'<div class="text-{{ properties.alignment }}">\n  <a ng-class="properties.buttonStyle !== \'none\' ? \'btn btn-\' + properties.buttonStyle : \'\'" ng-href="{{ctrl.getHref()}}" target="{{ctrl.getTarget()}}" ng-bind-html="properties.text | uiTranslate"></a>\n</div>\n'};});